#!/usr/bin/env ruby
# frozen_string_literal: true

require "net/http"
require "json"
require "uri"

# This script checks if a newer version of VCR has been released beyond 6.3.1
# If a newer version is found, it raises an error indicating that we should
# switch back to using the released gem instead of the git commit.

CURRENT_VCR_VERSION = "6.3.1"
VCR_COMMIT_SHA = "ce35c236fe48899f02ddf780973b44cdb756c0ee"

def fetch_latest_vcr_version
  uri = URI("https://rubygems.org/api/v1/gems/vcr.json")
  response = Net::HTTP.get_response(uri)

  unless response.is_a?(Net::HTTPSuccess)
    puts "Warning: Could not fetch VCR version information from RubyGems API"
    puts "Response: #{response.code} #{response.message}"
    return nil
  end

  gem_info = JSON.parse(response.body)
  gem_info["version"]
rescue StandardError => e
  puts "Warning: Error fetching VCR version information: #{e.message}"
  nil
end

def version_greater?(version1, version2)
  # Simple version comparison - splits by dots and compares numerically
  v1_parts = version1.split(".").map(&:to_i)
  v2_parts = version2.split(".").map(&:to_i)

  # Pad shorter version with zeros
  max_length = [v1_parts.length, v2_parts.length].max
  v1_parts += [0] * (max_length - v1_parts.length)
  v2_parts += [0] * (max_length - v2_parts.length)

  v1_parts.zip(v2_parts).each do |v1, v2|
    return true if v1 > v2
    return false if v1 < v2
  end

  false # versions are equal
end

def main
  puts "Checking for newer VCR releases..."
  puts "Current pinned version: #{CURRENT_VCR_VERSION}"
  puts "Using commit: #{VCR_COMMIT_SHA}"
  puts ""

  latest_version = fetch_latest_vcr_version

  if latest_version.nil?
    puts "Could not determine latest VCR version. Skipping check."
    exit 0
  end

  puts "Latest released version: #{latest_version}"

  if version_greater?(latest_version, CURRENT_VCR_VERSION)
    puts ""
    puts "ðŸš¨ NEWER VCR VERSION AVAILABLE! ðŸš¨"
    puts ""
    puts "A newer version of VCR (#{latest_version}) has been released!"
    puts "This is likely to include the Ruby 3.5+ compatibility fix from commit #{VCR_COMMIT_SHA}."
    puts ""
    puts "ACTION REQUIRED:"
    puts "1. Update Gemfile to use the released version:"
    puts "   gem \"vcr\", \"~> #{latest_version}\", require: false"
    puts ""
    puts "2. Remove the git reference and commit SHA"
    puts ""
    puts "3. Run 'bundle update vcr' to update to the new version"
    puts ""
    puts "4. Test to ensure everything works with the released version"
    puts ""
    puts "5. Consider removing this version check script once updated"
    puts ""

    exit 1
  else
    puts "No newer version available. Continuing to use commit #{VCR_COMMIT_SHA}."
    exit 0
  end
end

if __FILE__ == $0
  main
end
